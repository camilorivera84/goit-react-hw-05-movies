{"version":3,"file":"static/js/385.cf66fd85.chunk.js","mappings":"wNAIMA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,4BACE,kCACA,gBAAKC,UAAU,MAAf,SACGD,EAAKE,KAAI,SAAAC,GAAK,OACb,gBAAoBF,UAAU,gBAA9B,UACE,iBAAKA,UAAU,OAAf,WACE,gBACEG,IAAG,yCAAoCD,EAAME,cAC7CC,IAAG,UAAKH,EAAMI,KAAX,YACHN,UAAU,kBAEZ,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,SAA4BE,EAAMI,QAClC,eAAGN,UAAU,YAAb,wBAAqCE,EAAMK,oBATvCL,EAAMM,GADH,QAJR,EAuBPC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,4BACE,qCACA,wBACGA,EAAQT,KAAI,SAAAU,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,qCAAaD,EAAOE,aAFbF,EAAOH,GADC,QAJT,EA2FhB,UA7EqB,SAAC,GAAwB,IAAtBM,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7B,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOjB,EAAP,KAAaoB,EAAb,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBU,EAAhB,KACA,GAA0CJ,EAAAA,EAAAA,UAAS,MAAnD,eAAOK,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAkBV,EAAMW,OAAOC,SAC/BC,EAAUb,EAAMW,OAAOC,SACvBE,EAAad,EAAMW,OAAOC,QAC3B,GAAE,CAACZ,EAAMW,OAAOC,UAEjB,IAAMF,EAAiB,mCAAG,WAAME,GAAN,gGAECG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,oBACoCI,EAAAA,IAHrC,OAEhBC,EAFgB,OAKtBb,EAASa,EAASC,MALI,gDAOtBC,QAAQC,MAAM,gCAAd,MAPsB,yDAAH,sDAWjBP,EAAS,mCAAG,WAAMD,GAAN,gGAESG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BAC4CI,EAAAA,IAHrD,OAERC,EAFQ,OAKdZ,EAAQY,EAASC,KAAKjC,MALR,gDAOdkC,QAAQC,MAAM,uBAAd,MAPc,yDAAH,sDAWTN,EAAY,mCAAG,WAAMF,GAAN,gGAEMG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,4BAC4CI,EAAAA,IAHlD,OAEXC,EAFW,OAKjBX,EAAWW,EAASC,KAAKG,SALR,gDAOjBF,QAAQC,MAAM,0BAAd,MAPiB,yDAAH,sDAWZE,EAAgB,SAAAC,GACpBf,EAAiBe,GACjBtB,EAAQuB,KAAR,kBAAwBxB,EAAMW,OAAOC,QAArC,YAAgDW,GACjD,EAED,OACE,4BACE,2CACA,oCAAYpB,EAAMsB,SAEjBtB,EAAMuB,cACL,gBACErC,IAAG,yCAAoCc,EAAMuB,aAC7CnC,IAAG,UAAKY,EAAMsB,MAAX,cAGP,sCAActB,EAAMwB,aACpB,mCAAWxB,EAAMyB,iBACjB,mCACU,IACPzB,EAAM0B,QAAU1B,EAAM0B,OAAO1C,KAAI,SAAA2C,GAAK,OAAIA,EAAMtC,IAAV,IAAgBuC,KAAK,UAG9D,mBAAQC,QAAS,kBAAMV,EAAc,OAApB,EAAjB,wBACA,mBAAQU,QAAS,kBAAMV,EAAc,UAApB,EAAjB,0BAEmB,SAAlBf,IAA4B,SAACvB,EAAD,CAAMC,KAAMA,IACtB,YAAlBsB,IAA+B,SAACZ,EAAD,CAASC,QAASA,MAGvD,C,qDCpHM,IAAMoB,EAAU,kC","sources":["components/MovieDetails.js","components/config.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from './config';\n\nconst Cast = ({ cast }) => (\n  <div>\n    <h2>Cast</h2>\n    <div className=\"row\">\n      {cast.map(actor => (\n        <div key={actor.id} className=\"col-md-3 mb-3\">\n          <div className=\"card\">\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={`${actor.name} profile`}\n              className=\"card-img-top\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{actor.name}</h5>\n              <p className=\"card-text\">Character: {actor.character}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst Reviews = ({ reviews }) => (\n  <div>\n    <h2>Reviews</h2>\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>Author: {review.author}</p>\n          <p>Content: {review.content}</p>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst MovieDetails = ({ match, history }) => {\n  const [movie, setMovie] = useState({});\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [activeSection, setActiveSection] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(match.params.movieId);\n    fetchCast(match.params.movieId);\n    fetchReviews(match.params.movieId);\n  }, [match.params.movieId]);\n\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      setMovie(response.data);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  };\n\n  const fetchCast = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error fetching cast:', error);\n    }\n  };\n\n  const fetchReviews = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      setReviews(response.data.results);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  };\n\n  const switchSection = section => {\n    setActiveSection(section);\n    history.push(`/movies/${match.params.movieId}/${section}`);\n  };\n\n  return (\n    <div>\n      <h2>Movie Details</h2>\n      <h3>Title: {movie.title}</h3>\n\n      {movie.poster_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n      )}\n      <p>Overview: {movie.overview}</p>\n      <p>Score: {movie.vote_average}</p>\n      <p>\n        Genres:{' '}\n        {movie.genres && movie.genres.map(genre => genre.name).join(', ')}\n      </p>\n\n      <button onClick={() => switchSection('Cast')}>Show Cast</button>\n      <button onClick={() => switchSection('Reviews')}>Show Reviews</button>\n\n      {activeSection === 'Cast' && <Cast cast={cast} />}\n      {activeSection === 'Reviews' && <Reviews reviews={reviews} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = '3c0b3815c968015248ff246dfcd85c29';\n"],"names":["Cast","cast","className","map","actor","src","profile_path","alt","name","character","id","Reviews","reviews","review","author","content","match","history","useState","movie","setMovie","setCast","setReviews","activeSection","setActiveSection","useEffect","fetchMovieDetails","params","movieId","fetchCast","fetchReviews","axios","API_KEY","response","data","console","error","results","switchSection","section","push","title","poster_path","overview","vote_average","genres","genre","join","onClick"],"sourceRoot":""}