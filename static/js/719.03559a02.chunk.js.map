{"version":3,"file":"static/js/719.03559a02.chunk.js","mappings":"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","sources":["components/Cast.js","components/MovieDetails.js","components/Reviews.js","components/config.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from './config';\n\nconst Cast = ({ match }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(match.params.movieId);\n  }, [match.params.movieId]);\n\n  const fetchCast = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error fetching cast:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul className=\"list-group\">\n        {cast.map(actor => (\n          <li key={actor.id} className=\"list-group-item\">\n            {actor.name}\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={`${actor.name} profile`}\n              style={{ marginLeft: '10px' }}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from './config';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst MovieDetails = ({ match, history }) => {\n  const [movie, setMovie] = useState({});\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [activeSection, setActiveSection] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(match.params.movieId);\n    fetchCast(match.params.movieId);\n    fetchReviews(match.params.movieId);\n  }, [match.params.movieId]);\n\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      setMovie(response.data);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  };\n\n  const fetchCast = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error fetching cast:', error);\n    }\n  };\n\n  const fetchReviews = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      setReviews(response.data.results);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  };\n\n  const switchSection = section => {\n    setActiveSection(section);\n    history.push(`/movies/${match.params.movieId}/${section}`);\n  };\n\n  return (\n    <div>\n      <h2>Movie Details</h2>\n      <h3>Title: {movie.title}</h3>\n\n      {movie.poster_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt={`${movie.title} poster`}\n        />\n      )}\n      <p>Overview: {movie.overview}</p>\n      <p>Score: {movie.vote_average}</p>\n      <p>\n        Genres:{' '}\n        {movie.genres && movie.genres.map(genre => genre.name).join(', ')}\n      </p>\n\n      <button\n        className=\"btn btn-primary ml-4\"\n        onClick={() => switchSection('Cast')}\n      >\n        Show Cast\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => switchSection('Reviews')}\n      >\n        Show Reviews\n      </button>\n\n      {activeSection === 'Cast' && <Cast cast={cast} />}\n      {activeSection === 'Reviews' && <Reviews reviews={reviews} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY } from './config';\n\nconst Reviews = ({ match }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(match.params.movieId);\n  }, [match.params.movieId]);\n\n  const fetchReviews = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      setReviews(response.data.results);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>{review.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = '3c0b3815c968015248ff246dfcd85c29';\n"],"names":["match","useState","cast","setCast","useEffect","fetchCast","params","movieId","axios","API_KEY","response","data","console","error","className","map","actor","name","src","profile_path","alt","style","marginLeft","id","history","movie","setMovie","reviews","setReviews","activeSection","setActiveSection","fetchMovieDetails","fetchReviews","results","switchSection","section","push","title","poster_path","overview","vote_average","genres","genre","join","onClick","Cast","Reviews","review","content"],"sourceRoot":""}